@mixin ellipsis($row_count: 1) {
    @if $row_count <=1 {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    @else {
        min-width: 0;
        overflow: hidden;
        text-overflow: ellipsis;
        display: -webkit-box;
        -webkit-line-clamp: $row_count;
        -webkit-box-orient: vertical;
    }
}

@mixin triangle($size, $color, $directionMap) {
    width: 0;
    height: 0;

    @if top==$directionMap {
        border-left: $size solid transparent;
        border-right: $size solid transparent;
        border-bottom: $size solid $color;
    }

    @else if right==$directionMap {
        border-top: $size solid transparent;
        border-bottom: $size solid transparent;
        border-left: $size solid $color;
    }

    @else if bottom==$directionMap {
        border-left: $size solid transparent;
        border-right: $size solid transparent;
        border-top: $size solid $color;
    }

    @else if left==$directionMap {
        border-top: $size solid transparent;
        border-bottom: $size solid transparent;
        border-right: $size solid $color;
    }
}


@mixin thinBorder($directionMaps: bottom, $color: #ccc, $radius:(0, 0, 0, 0), $position: after) {
    // 是否只有一个方向
    $isOnlyOneDir: string==type-of($directionMaps);

    @if ($isOnlyOneDir) {
        $directionMaps: ($directionMaps);
    }

    @each $directionMap in $directionMaps {
        border-#{$directionMap}: 1px solid $color;
    }

    // 判断圆角是list还是number
    @if(list==type-of($radius)) {
        border-radius: nth($radius, 1) nth($radius, 2) nth($radius, 3) nth($radius, 4);
    }

    @else {
        border-radius: $radius;
    }

    @media only screen and (-webkit-min-device-pixel-ratio: 2) {
        & {
            position: relative;



            // 删除1像素密度比下的边框
            @each $directionMap in $directionMaps {
                border-#{$directionMap}: none;
            }
        }

        &:#{$position} {
            content: "";
            position: absolute;
            top: 0;
            left: 0;
            display: block;
            width: 200%;
            height: 200%;
            transform: scale(0.5);
            box-sizing: border-box;
            padding: 1px;
            transform-origin: 0 0;
            pointer-events: none;
            border: 0 solid $color;

            @each $directionMap in $directionMaps {
                border-#{$directionMap}-width: 1px;
            }

            // 判断圆角是list还是number
            @if(list==type-of($radius)) {
                border-radius: nth($radius, 1)*2 nth($radius, 2)*2 nth($radius, 3)*2 nth($radius, 4)*2;
            }

            @else {
                border-radius: $radius*2;
            }

        }
    }

    @media only screen and (-webkit-min-device-pixel-ratio: 3) {
        &:#{$position} {

            // 判断圆角是list还是number
            @if(list==type-of($radius)) {
                border-radius: nth($radius, 1)*3 nth($radius, 2)*3 nth($radius, 3)*3 nth($radius, 4)*3;
            }

            @else {
                border-radius: $radius*3;
            }

            width: 300%;
            height: 300%;
            transform: scale(0.33);
        }
    }
}

@mixin hidden($isDeep: false) {
    @if $isDeep {
        height: 0;
        opacity: 0;
    }

    display: none;
}

/**
* 等边三角形
* @param {String} 尺寸
* @param {Color} 颜色
* @param {String} 方向
*/
@mixin triangle($size: 5px, $color: rgba(0, 0, 0, 0.6), $directionMap: bottom) {
    width: 0;
    height: 0;
    border-style: solid;

    @if ("bottom"==$directionMap) {
        border-width: 5px 5px 0 5px;
        border-color: $color transparent transparent transparent;
    }

    @if ("top"==$directionMap) {
        border-width: 0 5px 5px 5px;
        border-color: transparent transparent $color transparent;
    }

    @if ("right"==$directionMap) {
        border-width: 5px 0 5px 5px;
        border-color: transparent transparent transparent $color;
    }

    @if ("left"==$directionMap) {
        border-width: 5px 5px 5px 0;
        border-color: transparent $color transparent transparent;
    }
}

/**
* 棋盘背景
* @param {Color} 背景色
*/
@mixin bgChessboard($color: #aaa) {
    background-image: linear-gradient(45deg,
            $color 25%,
            transparent 25%,
            transparent 75%,
            $color 75%,
            $color),
        linear-gradient(45deg,
            $color 26%,
            transparent 26%,
            transparent 74%,
            $color 74%,
            $color);
    background-size: 10vw 10vw;
    background-position: 0 0, 5vw 5vw;
}